/*  A simple script Template to run my Plant Model
          Author: Ravi Saripalli
	  Date:   23th Jul. 2015
       
    Highly Simplified ... and easy to read 
*/  

/***************     Load Library and Models   *********/
echo(false);
N := 10; tEnd := 40; 
sim := if system("zenity --question --text Simulate?") == 0 then true else false;

print(getSettings()); print("\n\n****** Loading of packages etc. *****\n\n");
ThermoLib := "/home/ravi/hobby/chem/om/ThermoS/package.mo";
for f in {"plant.mo", ThermoLib} loop
	if(loadFile(f)) then
	   print ( f + " Loaded\n");
	else
	   print(f + " Load Failed\n" + getErrorString());
	   exit(1);
	end if;
end for ;
print("\n\n****** Loading Done *****\n\n");

if (sim) then

print("Saving Total Model in total.mo \n") ;
saveTotalModel("total.mo",plant); // gives stand alone mo file to send out for debug reports.

/************ Cleanup Work **********/
print("Cleaning Up Work Area\n") ; system("rm work/*"); cd("./work");   system("pwd");

ThermoS.Util.getInfo();  // Gives me the list of all switches in omc
flags :=  "-lv=LOG_INIT,LOG_NLS_V  -w  " ;  
setCommandLineOptions("+d=initialization"); // pickup initialization errrors

print("Starting the Plant \n");
simulate(plant, startTime=0, outputFormat="mat",
         stopTime=tEnd,   // tolerance=1e-3, iniStepSize=iniStepSize, 
         simflags=flags) ;
print(getErrorString());

// *** Check Simulation run/translation failures  ***
echo(true);
system("./plant") ; // Well this is to force the stupid thing to run when dummyDerivatives are Selected
sVars :=  readSimulationResultVars("plant_res.mat") ; //print(sVars);
if (size(sVars,1) == 0) then  // no variables then bailout
  print("simulation failed ... bailing out\n");
  // exit(1);
else
   print("simulation done\n");
   print("No. of Plant Variables = " + String(size(sVars,1)) + "\n");
end if;

else
   print("Skipping Simulation\n");
   cd("./work");
end if ;  // Skip simulation
//exit(1);
print("Plotting\n");

// readSimulationResultVars("plant_res.mat");
//   Plotting etc.
plot({vin.inlet.m_flow, vpurge.inlet.m_flow},
       curveWidth=2, externalWindow=true, title = "State Changes");
print(getErrorString());



//setCommandLineOptions("+d=bltdump"); // pickup initialization errrors
//setCommandLineOptions("+d=addDerAliases");  // Don't know this
//setCommandLineOptions("+d=noTearing");
//flags :=  "-lv=LOG_LS,LOG_INIT,LOG_NLS  -w -ffloat-store -dasslJacobian=numerical" ;  
//flags :=  "-lv=LOG_LS,LOG_INIT,LOG_NLS  -w -ffloat-store " ;  
// flags :=  "--simCodeTarget=Java" ;  
//flags := flags + " -overrideFile ../init ";
// setCommandLineOptions("+d=disableSymbolicLinearization"); // pickup initialization errrors
// **********  XXXXX   setCommandLineOptions("+d=dumpdaelow,bltdump");
// setCommandLineOptions("+d=bltdump");
//OpenModelica.Scripting.setTearingMethod("omcTearing");
//OpenModelica.Scripting.setMatchingAlgorithm("omc");
// OpenModelica.Scripting.setIndexReductionMethod("dummyDerivatives");
// setTearingMethod("noTearing"); setIndexReductionMethod("uode"); setMatchingAlgorithm("BFSB"); ThermoS.Util.getInfo();  // Gives me the list of all switches in omc
